/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculadoraremota;

import javax.swing.JOptionPane;

public class Calculadora extends javax.swing.JDialog {

    /**
     * Creates new form Calculadora
     */ 
    int operacion;float a,b;
     private boolean botonRaiz = false;
      private boolean botonRaiz_cubica = false, boton_sin = false,boton_cos = false,boton_tan = false;
    public Calculadora(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Calculadora");
        setLocationRelativeTo(null);
        this.a = 0;
        this.b = 0;
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jBSin = new javax.swing.JButton();
        jBCos = new javax.swing.JButton();
        jBTan = new javax.swing.JButton();
        jBRaiz = new javax.swing.JButton();
        jBCubica = new javax.swing.JButton();
        jBSuma = new javax.swing.JButton();
        jBPotencia = new javax.swing.JButton();
        jBIgual = new javax.swing.JButton();
        jBResta = new javax.swing.JButton();
        jBDivision = new javax.swing.JButton();
        jBMultiplicacion = new javax.swing.JButton();
        jBMod = new javax.swing.JButton();
        jBCE = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));
        jPanel1.setLayout(null);

        jTextField1.setBackground(new java.awt.Color(51, 255, 102));
        jPanel1.add(jTextField1);
        jTextField1.setBounds(40, 30, 290, 43);

        jBSin.setBackground(new java.awt.Color(102, 255, 102));
        jBSin.setText("Sin");
        jBSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSinActionPerformed(evt);
            }
        });
        jPanel1.add(jBSin);
        jBSin.setBounds(40, 135, 80, 20);

        jBCos.setBackground(new java.awt.Color(102, 255, 102));
        jBCos.setText("Cos");
        jBCos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCosActionPerformed(evt);
            }
        });
        jPanel1.add(jBCos);
        jBCos.setBounds(40, 110, 80, 20);

        jBTan.setBackground(new java.awt.Color(102, 255, 102));
        jBTan.setText("Tan");
        jBTan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTanActionPerformed(evt);
            }
        });
        jPanel1.add(jBTan);
        jBTan.setBounds(40, 160, 80, 18);

        jBRaiz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/raiz-cuadrada.png"))); // NOI18N
        jBRaiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRaizActionPerformed(evt);
            }
        });
        jPanel1.add(jBRaiz);
        jBRaiz.setBounds(40, 250, 80, 70);

        jBCubica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/raiz cubica.png"))); // NOI18N
        jBCubica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCubicaActionPerformed(evt);
            }
        });
        jPanel1.add(jBCubica);
        jBCubica.setBounds(120, 180, 70, 70);

        jBSuma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mas.png"))); // NOI18N
        jBSuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSumaActionPerformed(evt);
            }
        });
        jPanel1.add(jBSuma);
        jBSuma.setBounds(190, 180, 70, 70);

        jBPotencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/potencia.png"))); // NOI18N
        jBPotencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPotenciaActionPerformed(evt);
            }
        });
        jPanel1.add(jBPotencia);
        jBPotencia.setBounds(40, 180, 80, 70);

        jBIgual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/igual.png"))); // NOI18N
        jBIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIgualActionPerformed(evt);
            }
        });
        jPanel1.add(jBIgual);
        jBIgual.setBounds(260, 110, 70, 70);

        jBResta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/resta.png"))); // NOI18N
        jBResta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRestaActionPerformed(evt);
            }
        });
        jPanel1.add(jBResta);
        jBResta.setBounds(260, 250, 70, 70);

        jBDivision.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/div.png"))); // NOI18N
        jBDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDivisionActionPerformed(evt);
            }
        });
        jPanel1.add(jBDivision);
        jBDivision.setBounds(190, 250, 70, 70);

        jBMultiplicacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/multiplicacion.png"))); // NOI18N
        jBMultiplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMultiplicacionActionPerformed(evt);
            }
        });
        jPanel1.add(jBMultiplicacion);
        jBMultiplicacion.setBounds(120, 250, 70, 70);

        jBMod.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mod.png"))); // NOI18N
        jBMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBModActionPerformed(evt);
            }
        });
        jPanel1.add(jBMod);
        jBMod.setBounds(260, 180, 70, 70);

        jBCE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ce.png"))); // NOI18N
        jBCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCEActionPerformed(evt);
            }
        });
        jPanel1.add(jBCE);
        jBCE.setBounds(119, 110, 140, 70);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean isSelectButton(){
        if(botonRaiz | botonRaiz_cubica | boton_sin | boton_cos | boton_tan)
        {
            return true;
        }
        return false;
    }
    public void disableButtons()
    {
        jBRaiz.setEnabled(false);
        jBSuma.setEnabled(false);
        jBMod.setEnabled(false);
        jBMultiplicacion.setEnabled(false);
        jBDivision.setEnabled(false);
        jBResta.setEnabled(false);
        jBCubica.setEnabled(false);
        jBPotencia.setEnabled(false);
        jBCos.setEnabled(false);
        jBSin.setEnabled(false);
        jBTan.setEnabled(false);
    }
    private void jBSumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSumaActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().equals("")){
            //mensaje de campo vacio
            JOptionPane.showMessageDialog(null,"!Advertencia!\nDebe escribir un numero","Mensaje...",
                    JOptionPane.WARNING_MESSAGE);
            jTextField1.requestFocus();
        }else{
            try{
                
                    jTextField1.requestFocus();//obtenemos el focus
                    this.a=Float.parseFloat(jTextField1.getText());
                    this.operacion=1;
                    jTextField1.setText("");
                
                
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null,"Error de conversion de tipo de datos","Error...",JOptionPane.ERROR_MESSAGE);
            }
        }
        
        
    }//GEN-LAST:event_jBSumaActionPerformed

    private void jBIgualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIgualActionPerformed
        // TODO add your handling code here:
        
        if(jTextField1.getText().equals("")){
            //mensaje de campo vacio
            JOptionPane.showMessageDialog(null,"!Advertencia!\nDebe escribir un numero","Mensaje...",
                    JOptionPane.WARNING_MESSAGE);
            jTextField1.requestFocus();
        }else{
            try{
                if(botonRaiz | botonRaiz_cubica | boton_sin | boton_cos | boton_tan){// si se presiono el boton raiz cuadrada o raiz cubica
                    jTextField1.requestFocus();//obtenemos el focus
                    
                    jBSuma.setEnabled(true);
                    jBMod.setEnabled(true);
                    jBMultiplicacion.setEnabled(true);
                    jBDivision.setEnabled(true);
                    jBResta.setEnabled(true);
                    jBCubica.setEnabled(true);
                    jBPotencia.setEnabled(true);
                    jBCos.setEnabled(true);
                    jBSin.setEnabled(true);
                    jBTan.setEnabled(true);
                    
                    jBRaiz.setEnabled(true);// se activa el boton raiz
                    this.a=Float.parseFloat(jTextField1.getText());
                    jTextField1.setText(""+Operacion());// se visualiza el resultado en el JTextField
                    this.a = 0;
                }else{
                    
                    jTextField1.requestFocus();//obtenemos el focus
                    this.b=Float.parseFloat(jTextField1.getText());
                    jTextField1.setText("");                                
                    jTextField1.setText(""+Operacion());
                    this.a = 0;
                    this.b = 0;        
                }
                
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null,"Error de conversion de tipo de datos","Error...",JOptionPane.ERROR_MESSAGE);
            }
        }        
        
    }//GEN-LAST:event_jBIgualActionPerformed

    private void jBRestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRestaActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().equals("")){
            //mensaje de campo vacio
            JOptionPane.showMessageDialog(null,"!Advertencia!\nDebe escribir un numero","Mensaje...",
                    JOptionPane.WARNING_MESSAGE);
            jTextField1.requestFocus();
        }else{
            try{
                jTextField1.requestFocus();//obtenemos el focus
                this.a=Float.parseFloat(jTextField1.getText());
                this.operacion=2;//resta
                jTextField1.setText("");
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null,"Error de conversion de tipo de datos","Error...",JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_jBRestaActionPerformed

    private void jBMultiplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMultiplicacionActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().equals("")){
            //mensaje de campo vacio
            JOptionPane.showMessageDialog(null,"!Advertencia!\nDebe escribir un numero","Mensaje...",
                    JOptionPane.WARNING_MESSAGE);
            jTextField1.requestFocus();
        }else{
            try{
                jTextField1.requestFocus();//obtenemos el focus
                this.a=Float.parseFloat(jTextField1.getText());
                this.operacion=4;//multiplicacion
                jTextField1.setText("");
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null,"Error de conversion de tipo de datos","Error...",JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_jBMultiplicacionActionPerformed

    private void jBDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDivisionActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().equals("")){
            //mensaje de campo vacio
            JOptionPane.showMessageDialog(null,"!Advertencia!\nDebe escribir un numero","Mensaje...",
                    JOptionPane.WARNING_MESSAGE);
            jTextField1.requestFocus();
        }else{
            try{
                jTextField1.requestFocus();//obtenemos el focus
                this.a=Float.parseFloat(jTextField1.getText());
                this.operacion=3;//division
                jTextField1.setText("");
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null,"Error de conversion de tipo de datos","Error...",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBDivisionActionPerformed

    private void jBPotenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPotenciaActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().equals("")){
            //mensaje de campo vacio
            JOptionPane.showMessageDialog(null,"!Advertencia!\nDebe escribir un numero","Mensaje...",
                    JOptionPane.WARNING_MESSAGE);
            jTextField1.requestFocus();
        }else{
            try{
                jTextField1.requestFocus();//obtenemos el focus
                this.a=Float.parseFloat(jTextField1.getText());
                this.operacion=5;//potencia
                jTextField1.setText("");
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null,"Error de conversion de tipo de datos","Error...",JOptionPane.ERROR_MESSAGE);
                
            }
        }
    }//GEN-LAST:event_jBPotenciaActionPerformed

    private void jBRaizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRaizActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
        botonRaiz = true;// se asigna el valor true a la bandera BotonRaiz
        jBRaiz.setEnabled(false);// Se desactiva el boton Raiz cuadrada
        disableButtons();
        this.operacion=6;// se presiona raiz cuadrada
        jTextField1.requestFocus();
    }//GEN-LAST:event_jBRaizActionPerformed

    private void jBCubicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCubicaActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
        this.a = 0;
        botonRaiz_cubica = true;
        jBCubica.setEnabled(false);
        disableButtons();
        this.operacion = 7;
        jTextField1.requestFocus();
    }//GEN-LAST:event_jBCubicaActionPerformed

    private void jBModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBModActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().equals("")){
            //mensaje de campo vacio
            JOptionPane.showMessageDialog(null,"!Advertencia!\nDebe escribir un numero","Mensaje...",
                    JOptionPane.WARNING_MESSAGE);
            jTextField1.requestFocus();
            
        }else{
            try{
                jTextField1.requestFocus();//obtenemos el focus
                this.a=Float.parseFloat(jTextField1.getText());
                this.operacion=8;//division por modulo
                jTextField1.setText("");
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null,"Error de conversion de tipo de datos","Error...",JOptionPane.ERROR_MESSAGE);
                
            }
        }
    }//GEN-LAST:event_jBModActionPerformed

    private void jBSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSinActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
        boton_sin = true;
        this.a = 0;
        jBSin.setEnabled(false);
        disableButtons();
        this.operacion = 9;
        jTextField1.requestFocus();
    }//GEN-LAST:event_jBSinActionPerformed

    private void jBCosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCosActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
        boton_cos = true;
        this.a = 0;
        jBCos.setEnabled(false);
        disableButtons();
        this.operacion = 10;
        jTextField1.requestFocus();
    }//GEN-LAST:event_jBCosActionPerformed

    private void jBTanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTanActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
        boton_tan = true;
        this.a = 0;
        jBTan.setEnabled(false);
        disableButtons();
        this.operacion = 11;
        jTextField1.requestFocus();
    }//GEN-LAST:event_jBTanActionPerformed

    private void jBCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCEActionPerformed
        // TODO add your handling code here:
        jTextField1.requestFocus();
        jTextField1.setText("");
        jBSuma.setEnabled(true);
        jBMod.setEnabled(true);
        jBMultiplicacion.setEnabled(true);
        jBDivision.setEnabled(true);
        jBResta.setEnabled(true);
        jBCubica.setEnabled(true);
        jBPotencia.setEnabled(true);
        jBCos.setEnabled(true);
        jBSin.setEnabled(true);
        jBTan.setEnabled(true);

        jBRaiz.setEnabled(true);// se activa el boton raiz
        this.a = 0;
        this.b = 0;
    }//GEN-LAST:event_jBCEActionPerformed
    public float Operacion(){
       
     if(this.operacion==1){
      
        return sumaWs(this.a,this.b);// se retorna el resultado de la suma del argumento 1 y el argumento 2
     }
    if(this.operacion==2){
        return restaWs(this.a,this.b);// se retora el resultado de restar el argumento 1 y el argumento 2
    }
     if(this.operacion==4){
       
        return multiplicacionWs(this.a,this.b); // se retorna el resultadp de multiplicar el argumento 1 y argumento 2
     }
     if(this.operacion==3){
       
         return divisionWs(this.a,this.b);// se retorna el valor de la division del argumento 1 y el argumento 2
     
     }
     if(this.operacion==5)
     {
         return potenciaWs(this.a,this.b); // se retorna el resultado de elevar el argumento 1 al valor del argumento 2
     }
     if(this.operacion==6)
     {
         return raizCuadradaWs(this.a); // se retorna el valor de la raiz cuadrada del argumento 1
     }
     if(this.operacion==7)
     {
         return raizCubicaWs(this.a); // se retorna el valor de la raiz cubica del argumento 1
     }
     if(this.operacion==8){
         return divisionModuloWs(this.a,this.b);
     }
     if(this.operacion==9){
         return sinWs(this.a);
     }
     if(this.operacion==10){
         return cosWs(this.a);
     }
     if(this.operacion==11){
         return tanWs(this.a);
     }
        return 0;
     
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Calculadora dialog = new Calculadora(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCE;
    private javax.swing.JButton jBCos;
    private javax.swing.JButton jBCubica;
    private javax.swing.JButton jBDivision;
    private javax.swing.JButton jBIgual;
    private javax.swing.JButton jBMod;
    private javax.swing.JButton jBMultiplicacion;
    private javax.swing.JButton jBPotencia;
    private javax.swing.JButton jBRaiz;
    private javax.swing.JButton jBResta;
    private javax.swing.JButton jBSin;
    private javax.swing.JButton jBSuma;
    private javax.swing.JButton jBTan;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private static float sumaWs(float arg0, float arg1) {
        ws.OperacionDosService service = new ws.OperacionDosService();
        ws.OperacionDos port = service.getOperacionDosPort();
        return port.sumaWs(arg0, arg1);
    }

    private static float restaWs(float arg0, float arg1) {
        ws.OperacionDosService service = new ws.OperacionDosService();
        ws.OperacionDos port = service.getOperacionDosPort();
        return port.restaWs(arg0, arg1);
    }

    private static float multiplicacionWs(float arg0, float arg1) {
        ws.OperacionDosService service = new ws.OperacionDosService();
        ws.OperacionDos port = service.getOperacionDosPort();
        return port.multiplicacionWs(arg0, arg1);
    }

    private static float divisionWs(float arg0, float arg1) {
        ws.OperacionDosService service = new ws.OperacionDosService();
        ws.OperacionDos port = service.getOperacionDosPort();
        return port.divisionWs(arg0, arg1);
    }

    private static float potenciaWs(float arg0, float arg1) {
        ws.OperacionDosService service = new ws.OperacionDosService();
        ws.OperacionDos port = service.getOperacionDosPort();
        return port.potenciaWs(arg0, arg1);
    }

    private static float raizCuadradaWs(float arg0) {
        ws.OperacionDosService service = new ws.OperacionDosService();
        ws.OperacionDos port = service.getOperacionDosPort();
        return port.raizCuadradaWs(arg0);
    }

    private static float raizCubicaWs(float arg0) {
        ws.OperacionDosService service = new ws.OperacionDosService();
        ws.OperacionDos port = service.getOperacionDosPort();
        return port.raizCubicaWs(arg0);
    }

    private static float divisionModuloWs(float arg0, float arg1) {
        ws.OperacionDosService service = new ws.OperacionDosService();
        ws.OperacionDos port = service.getOperacionDosPort();
        return port.divisionModuloWs(arg0, arg1);
    }

    private static float sinWs(float arg0) {
        ws.OperacionDosService service = new ws.OperacionDosService();
        ws.OperacionDos port = service.getOperacionDosPort();
        return port.sinWs(arg0);
    }

    private static float cosWs(float arg0) {
        ws.OperacionDosService service = new ws.OperacionDosService();
        ws.OperacionDos port = service.getOperacionDosPort();
        return port.cosWs(arg0);
    }

    private static float tanWs(float arg0) {
        ws.OperacionDosService service = new ws.OperacionDosService();
        ws.OperacionDos port = service.getOperacionDosPort();
        return port.tanWs(arg0);
    }
    
    
    
}
